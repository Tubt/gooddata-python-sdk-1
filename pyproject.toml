[tool.black]
line-length = 120
# intentionally ignore the generated clients
extend-exclude = '(gooddata-afm-client|gooddata-metadata-client|gooddata-scan-client|.*\.snapshot\..*)'

[tool.isort]
# make isort setup compatible with black
profile = "black"
multi_line_output = 3
include_trailing_comma = true
line_length = 120
skip_glob = ["*/gooddata-afm-client/*","*/gooddata-metadata-client/*","*/gooddata-scan-client/*", "*/.snapshot/*"]
src_paths = [
    "gooddata-afm-client",
    "gooddata-metadata-client",
    "gooddata-scan-client",
    "gooddata-sdk",
    "gooddata-fdw",
    "gooddata-pandas"
]

[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
# github_url = "https://github.com/<user or organization>/<project>/"

[tool.tbump.version]
current = "0.3.0"
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src="gooddata-fdw/gooddata_fdw/fdw.py"

[[tool.tbump.file]]
src="gooddata-pandas/gooddata_pandas/good_pandas.py"

[[tool.tbump.file]]
src="gooddata-sdk/gooddata_sdk/client.py"

[[tool.tbump.file]]
#docs
src="gooddata**/docs/conf.py"
search="release = \"{current_version}\""

[[tool.tbump.file]]
#clients
src="gooddata-*-client/gooddata_*_client/__init__.py"
search="__version__ = \"{current_version}\""

[[tool.tbump.file]]
#version files
src="**/VERSION"

# You can specify a list of commands to
# run after the files have been patched
# and before the git commit is made

#  [[tool.tbump.before_commit]]
#  name = "check changelog"
#  cmd = "grep -q {new_version} Changelog.rst"

# Or run some commands after the git tag and the branch
# have been pushed:
#  [[tool.tbump.after_push]]
#  name = "publish"
#  cmd = "./publish.sh"
